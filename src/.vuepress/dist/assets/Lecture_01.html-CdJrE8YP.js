import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as l,a as e,d as a}from"./app-OTuDJQCq.js";const s={},i=e("h2",{id:"course-main-theme",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#course-main-theme"},[e("span",null,"Course Main Theme")])],-1),r=e("ol",null,[e("li",null,[a("Designing and writing parallel programs —— scale! (规模) "),e("ul",null,[e("li",null,[a("Parallel thing "),e("ol",null,[e("li",null,[e("strong",null,"Decomposing"),a("(分解) the work into pieces that can safely be performed in parallel")]),e("li",null,"Assigning work to processors"),e("li",null,[e("strong",null,"Managing"),a(" communication/synchronization(同步) between the processors so that it does not limit "),e("strong",null,"speedup")])])])])]),e("li",null,[a("Parallel computer hardware implemtation: how parallel computers work "),e("ul",null,[e("li",null,[a("Mechanisms(机制) used to implement abstractions effeciently "),e("ol",null,[e("li",null,"Performance(性能) characteristics of implementations"),e("li",null,[e("strong",null,"Design trade-offs: performance vs. convenience vs. cost")])])])])]),e("li",null,[a("Thinking about efficiency "),e("ul",null,[e("li",null,[a("Fast "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("mo",{mathvariant:"normal"},"≠")]),e("annotation",{encoding:"application/x-tex"},"\\neq")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),e("span",{class:"mrel"},[e("span",{class:"mrel"},[e("span",{class:"mord vbox"},[e("span",{class:"thinbox"},[e("span",{class:"rlap"},[e("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),e("span",{class:"inner"},[e("span",{class:"mord"},[e("span",{class:"mrel"},"")])]),e("span",{class:"fix"})])])])]),e("span",{class:"mrel"},"=")])])])]),a(" Efficient")]),e("li",null,"Your program runs faster on a parallel computer, it deos not mean it is using the hardware efficiently.")])])],-1),o=[i,r];function c(p,m){return l(),t("div",null,o)}const u=n(s,[["render",c],["__file","Lecture_01.html.vue"]]),d=JSON.parse(`{"path":"/posts/HPC/Parallel%20Computer%20Architectyre%20and%20Programming/Lecture_01.html","title":"CMU 15-418 Lecture 01","lang":"zh-CN","frontmatter":{"title":"CMU 15-418 Lecture 01","icon":"file","order":3,"author":"Krigo","category":["CS"],"tag":["CS","Parallel Computing","Coding"],"footer":"Thank's myself until I find a jinx to ask questions. haha","copyrigh":"无版权","date":"2024-05-08T00:00:00.000Z","description":"Course Main Theme Designing and writing parallel programs —— scale! (规模) Parallel thing Decomposing(分解) the work into pieces that can safely be performed in parallel Assigning w...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/HPC/Parallel%20Computer%20Architectyre%20and%20Programming/Lecture_01.html"}],["meta",{"property":"og:site_name","content":"Krigo's 博客"}],["meta",{"property":"og:title","content":"CMU 15-418 Lecture 01"}],["meta",{"property":"og:description","content":"Course Main Theme Designing and writing parallel programs —— scale! (规模) Parallel thing Decomposing(分解) the work into pieces that can safely be performed in parallel Assigning w..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-24T15:52:20.000Z"}],["meta",{"property":"article:author","content":"Krigo"}],["meta",{"property":"article:tag","content":"CS"}],["meta",{"property":"article:tag","content":"Parallel Computing"}],["meta",{"property":"article:tag","content":"Coding"}],["meta",{"property":"article:published_time","content":"2024-05-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-24T15:52:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CMU 15-418 Lecture 01\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-24T15:52:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Krigo\\"}]}"]]},"headers":[{"level":2,"title":"Course Main Theme","slug":"course-main-theme","link":"#course-main-theme","children":[]}],"git":{"createdTime":1710747024000,"updatedTime":1716565940000,"contributors":[{"name":"Krigo","email":"14226817+krigo@user.noreply.gitee.com","commits":2}]},"readingTime":{"minutes":0.49,"words":147},"filePathRelative":"posts/HPC/Parallel Computer Architectyre and Programming/Lecture_01.md","localizedDate":"2024年5月8日","excerpt":"<h2>Course Main Theme</h2>\\n<ol>\\n<li>Designing and writing parallel programs —— scale! (规模)\\n<ul>\\n<li>Parallel thing\\n<ol>\\n<li><strong>Decomposing</strong>(分解) the work into pieces that can safely be performed in parallel</li>\\n<li>Assigning work to processors</li>\\n<li><strong>Managing</strong> communication/synchronization(同步) between the processors so that it does not limit <strong>speedup</strong></li>\\n</ol>\\n</li>\\n</ul>\\n</li>\\n<li>Parallel computer hardware implemtation: how parallel computers work\\n<ul>\\n<li>Mechanisms(机制) used to implement abstractions effeciently\\n<ol>\\n<li>Performance(性能) characteristics of implementations</li>\\n<li><strong>Design trade-offs: performance vs. convenience vs. cost</strong></li>\\n</ol>\\n</li>\\n</ul>\\n</li>\\n<li>Thinking about efficiency\\n<ul>\\n<li>Fast <span v-pre=\\"\\" class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mo mathvariant=\\"normal\\">≠</mo></mrow><annotation encoding=\\"application/x-tex\\">\\\\neq</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.8889em;vertical-align:-0.1944em;\\"></span><span class=\\"mrel\\"><span class=\\"mrel\\"><span class=\\"mord vbox\\"><span class=\\"thinbox\\"><span class=\\"rlap\\"><span class=\\"strut\\" style=\\"height:0.8889em;vertical-align:-0.1944em;\\"></span><span class=\\"inner\\"><span class=\\"mord\\"><span class=\\"mrel\\"></span></span></span><span class=\\"fix\\"></span></span></span></span></span><span class=\\"mrel\\">=</span></span></span></span></span> Efficient</li>\\n<li>Your program runs faster on a parallel computer, it deos not mean it is using the hardware efficiently.</li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}`);export{u as comp,d as data};
